services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always   #optional
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: car_rental_system
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  api-gateway:
    build: ./MAAPIGateway   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-api-gateway
    restart: always
    depends_on:
      - eureka-server
      - mysql-db
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "9000:9000"
#    networks:
#      - ma-project-network


  eureka-server:
    build: ./MAEureka   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-eureka-server
    restart: always
    depends_on:
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/car_rental_system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8761:8761"
#    networks:
#      - ma-project-network

  booking-service:
    build: ./MAProjectBookingServices   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-booking-service
    restart: always
    depends_on:
      - user-service
      - mysql-db
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/car_rental_system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
        - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8081:8081"
#    networks:
#      - ma-project-network

  owner-service:
    build: ./MAProjectOwnerServices   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-owner-service
    restart: always
    depends_on:
      - payment-service
      - eureka-server 
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/car_rental_system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
        - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8082:8082"
#    networks:
#      - ma-project-network

  payment-service:
    build: ./MAProjectPaymentServices   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-payment-service
    restart: always
    depends_on:
      - booking-service
      - eureka-server
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/car_rental_system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
        - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8084:8084"
#    networks:
#      - ma-project-network

  user-service:
    build: ./MAProjectUserServices   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-user-service
    restart: always
    depends_on:
      - eureka-server
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/car_rental_system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
        - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8083:8083"
#    networks:
#      - ma-project-network

  vehicle-service:
    build: ./Vehicle   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-vehicle-service
    restart: always
    depends_on:
      - eureka-server
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/car_rental_system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
        - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8085:8085"
#    networks:
#      - ma-project-network

  vehicle-km-service:
    build: ./VehicleKilometerTracking   # This tells Docker Compose to look for a Dockerfile no seprate docker build –t needed
    container_name: ma-project-vehicle-km-service
    restart: always
    depends_on:
      - eureka-server
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/car_rental_system
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
        - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8086:8086"
#    networks:
#      - ma-project-network


networks:
  ma-project-network:
    driver: bridge   #optional

volumes:
  mysql-data:
    driver: local     #optional
